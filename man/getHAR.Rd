% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/har.R, R/harDoc.R
\name{getHAR}
\alias{getHAR}
\title{Get HAR}
\usage{
getHAR(proxy, ...)
}
\arguments{
\item{proxy}{An object of class "proxy". A proxy object see
\code{\link{proxy}}.}

\item{...}{Additonal function arguments}
}
\value{
Returns the HAR as parsed JSON content
}
\description{
Returns the JSON/HAR content representing all the HTTP traffic passed 
   through the proxy (provided you have already created the HAR with 
   \code{\link{createHAR}})
}
\examples{
\dontrun{
  # A BMP server is assummed running on port 9090
  prxy <- proxy(bmpPort = 9090L, port = 39500L)
  library(httr)
  prxy \%>\% createHAR(ref = "httr_traffic_1")
  # use httr_proxy to configure proxy for httr
  rproj <- GET("https://www.r-project.org/", httr_proxy(prxy))
  httr_har <- prxy \%>\% getHAR()
  httr_har[["log"]][["entries"]][[1]]["request"]
  httr_har[["log"]][["entries"]][[1]]["response"]
  
  # set new page
  prxy \%>\% newPage(ref = "httr_traffic_2")
  rcran <- GET("https://cran.r-project.org/", httr_proxy(prxy))
  httr_har <- prxy \%>\% getHAR()
  vapply(httr_har[["log"]][["pages"]], '[[', character(1), "id")
  # [1] "httr_traffic_1" "httr_traffic_2"
  prxy \%>\% closeProxy
}
}
\seealso{
Other har functions: \code{\link{createHAR}},
  \code{\link{newPage}}
}

